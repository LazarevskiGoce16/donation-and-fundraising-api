# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file DonationFundraisingAPI/pom.xml clean install
    - name: Install lsof
      run: sudo apt-get update && sudo apt-get install -y lsof
    - name: Run jar (kill existing process first)
      run: |
        echo "Finding PID on port 8080..."
        PID=$(sudo lsof -t -i:8080 || true)
        if [ -n "$PID" ]; then
          echo "Killing process on port 8080 with PID: $PID"
          sudo kill -9 "$PID"
        else
          echo "No process found using port 8080"
        fi
        
        echo "Listing files in target directory:"
        ls -l ./DonationFundraisingAPI/target
        
        JAR_FILE=$(ls ./DonationFundraisingAPI/target/*.jar | head -n 1)
        
        if [ -z "$JAR_FILE" ]; then
          echo "Error: No JAR file found!"
          exit 1
        fi
        
        echo "Running JAR file: $JAR_FILE"
        sudo java -jar "$JAR_FILE" || { echo "Failed to run jar file"; exit 1; }

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
